import My : 'My.ecore';
import My : 'My.ecore';
import Ecore : 'http://www.eclipse.org/emf/2002/Ecore';
import My : 'Instance.requirements';

package generics : gns = 'eu.modelwriter.generics'
{
    abstract class List<E>
    {
        operation add(element : E);
        operation iterator() : Iterator<E>[?];
    }
    class Iterator<E>
    {
        operation next() : E[?] throws MyException<E>;
        operation hasNext() : Boolean;
    }
    class ArrayList<V> extends List<V>;
    class Car;
    abstract class Person { attribute name: EString  [1]; }
    class Owner<K, V extends Person & Car>
    {
        property cars : ArrayList<Car>[?];
        property owner : V[1..*];
    }
    abstract class Shape;
    class Canvas
    {
        operation draw(shapes : List<? extends Shape>, x: Integer, y: Integer) : Boolean[?];
        operation <V extends Shape> create(name : String);
        operation create(arg : ArrayList<? super Canvas>[?]);
        property b : My::B[2..5|?];
        attribute c: String;
        attribute d: V[*|?];
        annotation 'modelwriter/Ferhat' ('key' = , 'key'  = 'value', =)
        {
            reference Library::books;
            class AnnotationClass extends Person , Car<T>;
            property mehmet: type[+|1];
            reference Instance::B;
            reference Instance::@requirements.0::@parts.1;
            reference Instance::@requirements.0::@parts.0;
            reference Instance::@relationships.0;
        }
    }
    class MyException<T>;
}