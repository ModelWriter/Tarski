import My : './src/test/resources/AlloyInECore/My.ecore#/';
import My : './src/test/resources/AlloyInECore/My.ecore#/';
import Ecore : 'http://www.eclipse.org/emf/2002/Ecore';

package generics : gns = 'eu.modelwriter.generics'
{
    abstract class List<E>
    {
        operation add(element : E);
        operation iterator() : Iterator<E>[?];
    }
    class Iterator<E>
    {
        operation next() : E[?] throws MyException<E>;
        operation hasNext() : Boolean;
    }
    class ArrayList<V> extends List<V>;
    class Car;
    abstract class Person;
    class Owner<K, V extends Person & Car>
    {
        property cars : ArrayList<Car>[?];
        property owner : V[?];
    }
    abstract class Shape;
    class Canvas
    {
        operation draw(shapes : List<? extends Shape>) : Boolean[?];
        operation <V extends Shape> create(name : String);
        operation create(arg : ArrayList<? super Canvas>[?]);
        property b : My::B[?];
    }
    class MyException<T>;
}