package generics : gns = 'eu.modelwriter.generics'
{
    abstract class List<E>
    {
        operation add(element : E[1]);
        operation iterator() : Iterator<E>[?];
    }
    class Iterator<E>
    {
        operation next() : E[?] throws MyException <E>;
        operation hasNext() : Boolean[1];
    }
    class ArrayList<E> extends List<E>;
    class Car;
    abstract class Person;
    class Owner <K, V extends Car & Person>
    {
        property cars : ArrayList<Car>[?];
        property attr1: K;
    }
    abstract class Shape;
    class Canvas
    {
        operation draw(shapes : List<? extends Shape>[1]) : Boolean[?];
        operation <V extends Shape> create(name : String[1]);
        operation create(name: String, arg : ArrayList<? super Canvas>[?]);
    }
    class MyException<T>;
    public package tutorial : tut = 'http://www.eclipse.org/mdt/ocl/oclinecore/tutorial'
    {
        public class Library
        {
            attribute name : String[1];
            property books#library : Book[*|1] { composes };
            property loans : Loan[*|1] { composes };
            property members#library : Member[*|1] { composes };
            annotation 'modelwriter/Ferhat' ('key' = , 'key'  = 'value', =)
            { reference Library::books; class AnnotationClass; property mehmet: type;}
        }
        public class Book
        {
            operation isAvailable() : Boolean[?];
            attribute name : String[1];
            attribute copies : Integer[1];
            property library#books : Library[?];
            volatile property loans : Loan[*|1] { derived };
        }
        public class Member
        {
            model nullable attribute name : String[1];
            property library#members : Library[?];
            volatile property loans : Loan[*|1] { derived }; /*{derivation : library.loans->select;}*/
            volatile property books : Book[*|1] { !unique derived}; /*{derivation : loans->collect;}*/
        }
        class Loan
        {
            property book : Book[1];
            property member : Member[1] = 'Ferhat Erata';
            annotation
            {
                reference tutorial::Organization::Librarian::orgOpp;
            }
            nullable attribute date : ecore::EDate[?];
        }
        protected package enterprise : ent = 'http://www.eclipse.org/mdt/ocl/oclinecore/enterprise'
        {
            public interface Employee {
                attribute name : String[1] = 'Ferhat Erata';
                model attribute copies : Integer[1];
            }
            nullable datatype JavaPackage : 'java.lang.Package' { !serializable };
            enum Type { serializable }
            {
                type1 = 2;
                literal type2;
            }
        }
        /*invariant inv_name ("this rule is violated.") : all x: Employee | lone x.model ;*/
    }
}